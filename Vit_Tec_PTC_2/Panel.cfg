<?xml version="1.0" standalone="yes"?>
<HMIDataSet xmlns="http://tempuri.org/DataSet1.xsd">
  <xs:schema id="HMIDataSet" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
    <xs:element name="HMIDataSet" msdata:IsDataSet="true" msdata:Locale="en-US">
      <xs:complexType>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="ProjectTable">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Name" type="xs:string" default="Panel" minOccurs="0" />
                <xs:element name="Location" type="xs:string" minOccurs="0" />
                <xs:element name="Resolution" type="xs:string" minOccurs="0" />
                <xs:element name="Author" type="xs:string" minOccurs="0" />
                <xs:element name="Comments" type="xs:string" minOccurs="0" />
                <xs:element name="Version" type="xs:int" minOccurs="0" />
                <xs:element name="DefaultLanguage" type="xs:string" default="English" minOccurs="0" />
                <xs:element name="TitleEnable" type="xs:boolean" default="true" minOccurs="0" />
                <xs:element name="TitleText" type="xs:string" default="" minOccurs="0" />
                <xs:element name="StartupExpression" type="xs:string" default="" minOccurs="0" />
                <xs:element name="ShutdownExpression" type="xs:string" default="" minOccurs="0" />
                <xs:element name="Width" type="xs:short" default="800" minOccurs="0" />
                <xs:element name="Height" type="xs:short" default="480" minOccurs="0" />
                <xs:element name="TitleBar" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="DataVer" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="LogoffTime" type="xs:int" default="30" minOccurs="0" />
                <xs:element name="DaysOfValidity" type="xs:string" default="0" minOccurs="0" />
                <xs:element name="LoginExpression" type="xs:string" default="" minOccurs="0" />
                <xs:element name="LogoutExpression" type="xs:string" default="" minOccurs="0" />
                <xs:element name="NetworkAuthorization" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="LogDataPath" type="xs:int" default="0" minOccurs="0" />
                <xs:element name="TotalDesignTime" type="xs:duration" minOccurs="0" />
                <xs:element name="Password" type="xs:string" default="" minOccurs="0" />
                <xs:element name="DataSubVer" type="xs:int" default="0" minOccurs="0" />
                <xs:element name="AlarmSampingRate" type="xs:int" default="1000" minOccurs="0" />
                <xs:element name="DefaultTagScan" type="xs:int" default="100" minOccurs="0" />
                <xs:element name="DefaultLogSpeed" type="xs:int" default="1" minOccurs="0" />
                <xs:element name="TrendBoxStarIdx" type="xs:short" minOccurs="0" />
                <xs:element name="TrendBoxCount" type="xs:short" minOccurs="0" />
                <xs:element name="AlarmBoxStarIdx" type="xs:short" minOccurs="0" />
                <xs:element name="AlarmBoxCount" type="xs:short" minOccurs="0" />
                <xs:element name="Multi-linkMode" msprop:Generator_UserColumnName="Multi-linkMode" msprop:Generator_ColumnVarNameInTable="_columnMulti_linkMode" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="Multi-linkScanRate" msprop:Generator_UserColumnName="Multi-linkScanRate" msprop:Generator_ColumnVarNameInTable="_columnMulti_linkScanRate" type="xs:short" default="1000" minOccurs="0" />
                <xs:element name="Multi-linkTimeout" msprop:Generator_UserColumnName="Multi-linkTimeout" msprop:Generator_ColumnVarNameInTable="_columnMulti_linkTimeout" type="xs:short" default="1000" minOccurs="0" />
                <xs:element name="Multi-linkParameter" msprop:Generator_UserColumnName="Multi-linkParameter" msprop:Generator_ColumnVarNameInTable="_columnMulti_linkParameter" type="xs:string" default="192.168.0.0" minOccurs="0" />
                <xs:element name="OPCParameter" type="xs:string" minOccurs="0" />
                <xs:element name="Model" type="xs:string" minOccurs="0" />
                <xs:element name="SystemEventLog" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="SystemEventPrint" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="ProjectStorage" type="xs:int" default="0" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="ConnectTable">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Name" type="xs:string" minOccurs="0" />
                <xs:element name="UpdateRate" type="xs:int" default="1000" minOccurs="0" />
                <xs:element name="Protocol" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="Comment" type="xs:string" minOccurs="0" />
                <xs:element name="OPCServer" type="xs:string" default="None" minOccurs="0" />
                <xs:element name="Port" type="xs:short" default="502" minOccurs="0" />
                <xs:element name="IPAddress" type="xs:string" default="192.168.0.123" minOccurs="0" />
                <xs:element name="ComPort" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="Address" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="BaundRate" type="xs:int" default="38400" minOccurs="0" />
                <xs:element name="Parity" type="xs:string" default="None" minOccurs="0" />
                <xs:element name="DataBits" msdata:Caption="Data Bits" type="xs:short" default="8" minOccurs="0" />
                <xs:element name="StopBits" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="ModuleName" type="xs:string" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="SchedulerTable">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Type" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="Action" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="Expression" type="xs:string" minOccurs="0" />
                <xs:element name="Day" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="Hour" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="Minute" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="Second" type="xs:short" default="10" minOccurs="0" />
                <xs:element name="Millisecond" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="Weekly" type="xs:short" default="0" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="EventAlarm">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Tag" type="xs:string" default="" minOccurs="0" />
                <xs:element name="Type" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="SetpointType" type="xs:short" minOccurs="0" />
                <xs:element name="SetpointValue" type="xs:double" default="0" minOccurs="0" />
                <xs:element name="SetpointTag" type="xs:string" default="" minOccurs="0" />
                <xs:element name="Group" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="Expression" type="xs:string" default="" minOccurs="0" />
                <xs:element name="Hysteresis" type="xs:double" default="0" minOccurs="0" />
                <xs:element name="Job" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="Message" type="xs:string" default="" minOccurs="0" />
                <xs:element name="RateTime" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="Decimal" type="xs:short" default="2" minOccurs="0" />
                <xs:element name="BitWise" type="xs:unsignedInt" default="0" minOccurs="0" />
                <xs:element name="Print" type="xs:short" default="0" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Security">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Name" type="xs:string" default="" minOccurs="0" />
                <xs:element name="Level" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="Password" type="xs:string" default="INITPSWD" minOccurs="0" />
                <xs:element name="DaysOfValidity" type="xs:short" default="0" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Language">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="English" type="xs:string" default="" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="EventMethod">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="ScreenName" type="xs:string" default="&quot;&quot;" minOccurs="0" />
                <xs:element name="EventName" type="xs:string" default="&quot;&quot;" minOccurs="0" />
                <xs:element name="Parameter" type="xs:string" default="&quot;&quot;" minOccurs="0" />
                <xs:element name="Method" type="xs:string" minOccurs="0" />
                <xs:element name="CtrlName" type="xs:string" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Function">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Name" type="xs:string" default="" minOccurs="0" />
                <xs:element name="Expression" type="xs:string" default="" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="DataLog">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Tag" type="xs:string" default="" minOccurs="0" />
                <xs:element name="Trigger" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="Method" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="Speed" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="Tolerance" type="xs:double" default="1" minOccurs="0" />
                <xs:element name="MaxPoint" type="xs:unsignedInt" default="1000" minOccurs="0" />
                <xs:element name="Action" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="Name" type="xs:string" minOccurs="0" />
                <xs:element name="Comment" type="xs:string" default="" minOccurs="0" />
                <xs:element name="Unit" type="xs:string" default="" minOccurs="0" />
                <xs:element name="Print" type="xs:short" default="1" minOccurs="0" />
                <xs:element name="OldName" type="xs:string" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="SystemTag">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Name" type="xs:string" default="Tag" minOccurs="0" />
                <xs:element name="Type" type="xs:string" default="Analog" minOccurs="0" />
                <xs:element name="Comment" type="xs:string" minOccurs="0" />
                <xs:element name="Scan" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="ScanRate" type="xs:int" default="1000" minOccurs="0" />
                <xs:element name="BindStartIdx" type="xs:short" minOccurs="0" />
                <xs:element name="BindCount" type="xs:short" minOccurs="0" />
                <xs:element name="ReadOnly" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="DisplayStartIdx" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="DisplayCount" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="VisibleStartIdx" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="VisibleCount" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="RunModeType" type="xs:short" default="0" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="Conversion">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="Name" type="xs:string" minOccurs="0" />
                <xs:element name="Type" type="xs:short" default="0" minOccurs="0" />
                <xs:element name="EngHigh" type="xs:double" default="100" minOccurs="0" />
                <xs:element name="EngLow" type="xs:double" default="0" minOccurs="0" />
                <xs:element name="RangeLow" type="xs:double" default="0" minOccurs="0" />
                <xs:element name="Ggin" type="xs:double" default="1" minOccurs="0" />
                <xs:element name="Offset" type="xs:double" default="0" minOccurs="0" />
                <xs:element name="ReadExpression" type="xs:string" default="" minOccurs="0" />
                <xs:element name="WriteExpression" type="xs:string" default="" minOccurs="0" />
                <xs:element name="RangeHigh" type="xs:double" default="65535" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">
        <xs:selector xpath=".//mstns:Language" />
        <xs:field xpath="mstns:English" />
      </xs:unique>
    </xs:element>
  </xs:schema>
  <ProjectTable>
    <Name>Vit_Tec_PTC_2</Name>
    <Location>D:\NorthernHell\Vit_Tec_git</Location>
    <Resolution>HMI450 (480*272)</Resolution>
    <Author />
    <Comments />
    <Version>1</Version>
    <DefaultLanguage>English</DefaultLanguage>
    <TitleEnable>true</TitleEnable>
    <TitleText />
    <StartupExpression />
    <ShutdownExpression />
    <Width>480</Width>
    <Height>272</Height>
    <TitleBar>1</TitleBar>
    <DataVer>122</DataVer>
    <LogoffTime>0</LogoffTime>
    <DaysOfValidity>0</DaysOfValidity>
    <LoginExpression />
    <LogoutExpression />
    <NetworkAuthorization>0</NetworkAuthorization>
    <LogDataPath>0</LogDataPath>
    <TotalDesignTime>P10DT9H3M33.7852492S</TotalDesignTime>
    <Password />
    <DataSubVer>0</DataSubVer>
    <AlarmSampingRate>1000</AlarmSampingRate>
    <DefaultTagScan>100</DefaultTagScan>
    <DefaultLogSpeed>1</DefaultLogSpeed>
    <Multi-linkMode>0</Multi-linkMode>
    <Multi-linkScanRate>1000</Multi-linkScanRate>
    <Multi-linkTimeout>1000</Multi-linkTimeout>
    <Multi-linkParameter>192.168.0.0</Multi-linkParameter>
    <Model>HMI450 (480*272)</Model>
    <SystemEventLog>1</SystemEventLog>
    <SystemEventPrint>0</SystemEventPrint>
    <ProjectStorage>0</ProjectStorage>
  </ProjectTable>
  <ConnectTable>
    <Name>ModbusSlave</Name>
    <UpdateRate>1000</UpdateRate>
    <Protocol>2</Protocol>
    <OPCServer>ModbusSlave</OPCServer>
    <Port>502</Port>
    <IPAddress>192.168.0.123</IPAddress>
    <ComPort>1</ComPort>
    <Address>1</Address>
    <BaundRate>38400</BaundRate>
    <Parity>None</Parity>
    <DataBits>8</DataBits>
    <StopBits>1</StopBits>
  </ConnectTable>
  <ConnectTable>
    <Name>OPCMODBUS</Name>
    <UpdateRate>1000</UpdateRate>
    <Protocol>0</Protocol>
    <Comment>NewPort
</Comment>
    <OPCServer>OPCMODBUS</OPCServer>
    <Port>502</Port>
    <IPAddress>192.168.0.123</IPAddress>
    <ComPort>1</ComPort>
    <Address>1</Address>
    <BaundRate>38400</BaundRate>
    <Parity>None</Parity>
    <DataBits>8</DataBits>
    <StopBits>1</StopBits>
  </ConnectTable>
  <SchedulerTable>
    <Type>1</Type>
    <Action>1</Action>
    <Expression>Function1();
</Expression>
    <Day>0</Day>
    <Hour>0</Hour>
    <Minute>0</Minute>
    <Second>0</Second>
    <Millisecond>500</Millisecond>
    <Weekly>0</Weekly>
  </SchedulerTable>
  <SchedulerTable>
    <Type>1</Type>
    <Action>1</Action>
    <Expression>Function2();
</Expression>
    <Day>0</Day>
    <Hour>0</Hour>
    <Minute>0</Minute>
    <Second>0</Second>
    <Millisecond>500</Millisecond>
    <Weekly>0</Weekly>
  </SchedulerTable>
  <Security>
    <Name>Administrator</Name>
    <Level>9</Level>
    <Password>INITPSWD</Password>
    <DaysOfValidity>0</DaysOfValidity>
  </Security>
  <Function>
    <Name>Function1</Name>
    <Expression>//path="D:\\Projects\\Vit_Tec\\PCData\\ResidentFlash\\";
//path="D:\\Projects\\Vit_Tec\\";

//Modbus_RTU_client maped tags

P_1=NewPort_AI_1_ch_01;
P_2=NewPort_AI_1_ch_02;
Tv_1=NewPort_RTD_1_ch_01;
Ts_1=NewPort_RTD_1_ch_02;
Tn_1=NewPort_RTD_1_ch_03;
Tv_2=NewPort_RTD_1_ch_04;
Ts_2=NewPort_RTD_1_ch_05;
Tn_2=NewPort_RTD_1_ch_06;
Tnv_1=NewPort_RTD_2_ch_01;

//tank 1
int err_bad_st_1=1;//ошибка поиска строки в таблыце плотностей (0 - найдено 1 - не найдено)
int err_bad_row_1=1;//ошибка поиска столбца и значения Ro в таблыце плотностей (0 - найдено 1 - не найдено)

//tank 2
int err_bad_st_2=1;//ошибка поиска строки в таблыце плотностей (0 - найдено 1 - не найдено)
int err_bad_row_2=1;//ошибка поиска столбца и значения Ro в таблыце плотностей (0 - найдено 1 - не найдено)

//shit!
if (start==0){
//tank#1
G=9.815;
Ro0_1=0.980;
Hmo_1=65;
Vmo_1=106.595;
Hsum_1=1020;
Vsum_1=1841.919;
Htv_1=1047;
Hts_1=616;
Htn_1=150;

W_1=8;
//tank#2
Ro0_2=0.980;
Hmo_2=78;
Vmo_2=136.567;
Hsum_2=1180.5;
Vsum_2=2133.372;
W_2=8;

Htv_2=1059;
Hts_2=618;
Htn_2=162;
start++;}

path=@"\ResidentFlash\";
path_usb=@"\Hard Disk\";

Lpred_1=P_1/(Ro0_1*G*10); //предварительный уровень мазута 1

//число погруженных в мазут термометров и сред. темп.
if (Lpred_1&gt;=Htv_1){Tsr_1=(Tn_1+Ts_1+Tv_1)/3;}
if ((Lpred_1&lt;Htv_1)&amp;&amp;(Lpred_1&gt;=Hts_1)){Tsr_1=(Tn_1+Ts_1)/2;}
if (Lpred_1&lt;Hts_1){Tsr_1=Tn_1;}


Lpred_2=P_2/(Ro0_2*G*10); //предварительный уровень мазута 2

//число погруженных в мазут термометров и сред. темп.
if (Lpred_2&gt;=Htv_2){Tsr_2=(Tn_2+Ts_2+Tv_2)/3;}
if ((Lpred_2&lt;Htv_2)&amp;&amp;(Lpred_2&gt;=Hts_2)){Tsr_2=(Tn_2+Ts_2)/2;}
if (Lpred_2&lt;Hts_2){Tsr_2=Tn_2;}



System.IO.StreamReader file= new System.IO.StreamReader(path+ @"table.csv");
string[] str_mass = new string[1000];
double[] iskom_mass={20, 0.9,0.91,0.92,0.93,0.94,0.95,0.96,0.97,0.98,0.99};
string stroka = file.ReadLine();int st=0; 

while ((stroka !=null) &amp; (stroka !="null"))
    {
      str_mass[st]= stroka ;
      double Tsr_1_f = Tsr_1;
      double Tsr_2_f = Tsr_2;
 
     if ( st==System.Math.Round(Tsr_1_f*2) ){
	 
       err_bad_st_1=0;
       Screen1.LabelSt.Text=str_mass[st];  
        int r=0;
        string[] parts = stroka.Split(';');     
        int N=parts.Length;

        while (r&lt;N) {double bezd =  Convert.ToDouble(  ((int) (Convert.ToDouble(parts[r].Replace(',','.'))*100))   ) /100   ;
                           double bezd_Ro0_1 =  Convert.ToDouble(  ((int) (Ro0_1*100))   ) /100   ;
  
                           if ( bezd_Ro0_1  ==    bezd) {err_bad_row_1=0; Screen1.LabelRow.Text="row=" +  r.ToString()  + "значение=" + parts[r]; Roft_1=iskom_mass[r]-( Convert.ToDouble(parts[r].Replace(',','.'))-bezd )+(Ro0_1 - bezd_Ro0_1);}  
                           r++;}
                                                             }
														 
     if ( st==System.Math.Round(Tsr_2_f*2) ){

       Screen4.LabelSt.Text=str_mass[st];  
        int r=0;
        string[] parts = stroka.Split(';');     
        int N=parts.Length;

        while (r&lt;N) {double bezd =  Convert.ToDouble(  ((int) (Convert.ToDouble(parts[r].Replace(',','.'))*100))   ) /100   ;
                           double bezd_Ro0_2 =  Convert.ToDouble(  ((int) (Ro0_2*100))   ) /100   ;
  
                           if ( bezd_Ro0_2  ==    bezd) {Screen4.LabelRow.Text="row=" +  r.ToString()  + "значение=" + parts[r]; Roft_2=iskom_mass[r]-( Convert.ToDouble(parts[r].Replace(',','.'))-bezd )+(Ro0_2 - bezd_Ro0_2);}  
                           r++;}
                                                                   }															 
							 
      stroka = file.ReadLine();
      st++;
     }
 file.Close();
 
//обработка ошибок 
if ((err_bad_st_1 == 1)||(err_bad_row_1 == 1)) {Roft_1=Ro0_1;}  //tank 1
if ((err_bad_st_2 == 1)||(err_bad_row_2 == 1)) {Roft_2=Ro0_2;}  //tank 2


Lft_1=(P_1 + popravka_1)/(Roft_1*G*10); //фактический уровень мазут
Lsumft_1=(Lft_1+dL_1)+Hmo_1; // общий уровень мазута в емкости

Lft_2=(P_2 + popravka_2)/(Roft_2*G*10); //фактический уровень мазут
Lsumft_2=(Lft_2+dL_2)+Hmo_2; // общий уровень мазута в емкости


//Объем мазута в емкости
System.IO.StreamReader file3 = new System.IO.StreamReader(path+ @"level3.csv");
string strokaL = file3.ReadLine();
string[] partsL = strokaL.Split(';');  
double Lev = System.Math.Round( (double)(Lsumft_1) )*2+1 ;
VsumftL_1= Convert.ToDouble( partsL[(int)(Lev)].Replace(',','.') );

 file3.Close();

System.IO.StreamReader file4 = new System.IO.StreamReader(path+ @"level4.csv");
strokaL = file4.ReadLine();
partsL = strokaL.Split(';');  
Lev = System.Math.Round( (double)(Lsumft_2) )*2+1 ;
VsumftL_2= Convert.ToDouble( partsL[(int)(Lev)].Replace(',','.') );

 file4.Close();

//Объем мазута без м.о.
VftL_1=VsumftL_1-Vmo_1;

//из объмов определяем массы влажного мазута
Mft_1=VftL_1*Roft_1; //масса без м.о.
Mmoft_1=Vmo_1*Roft_1; //масса м.о.
Msumft_1=Mft_1+Mmoft_1; //суммарная масса мазута

//определяем массы сухого мазута
MSft_1=Mft_1*(1-W_1/100); //масса сухого мазута без м.о.
MSmoft_1=Mmoft_1*(1-W_1/100); //масса сухого м.о.
MSsumft_1=MSft_1+MSmoft_1; //суммарная масса сухого мазта


//my style
Screen2.Label_R0_1.Text="Ro0="+Ro0_1.ToString() + " г/см3";
Screen2.Label_W_1.Text="W="+W_1.ToString() + " %";
//Screen2.Label_Tnv.Text="Тнар.="+ ( System.Math.Round((double)(Tnv_1),2) ).ToString() + " С";


if (SZI_1){
//блинк предупр. по Т и Р на HMI
if (Tn_1&lt;=(ustT_1_l-G_1)) {Evniz_1=-3;}
if (Tn_1&gt;=(ustT_1_h+G_1)) {Evniz_1=3;}
if ( (Tn_1&gt;=(ustT_1_l+G_1)) &amp;&amp; (Tn_1&lt;=(ustT_1_h-G_1))  ) { Evniz_1=0;}


if (Ts_1&lt;=(ustT_1_l-G_1)) {Evser_1=-3;}
if (Ts_1&gt;=(ustT_1_h+G_1)) {Evser_1=3; }
if ( (Ts_1&gt;=(ustT_1_l+G_1)) &amp;&amp; (Ts_1&lt;=(ustT_1_h-G_1))  ) { Evser_1=0;}

if (Tv_1&lt;=(ustT_1_l-G_1)) {Evverh_1=-3;}
if (Tv_1&gt;=(ustT_1_h+G_1)) {Evverh_1=3; }
if ( (Tv_1&gt;=(ustT_1_l+G_1)) &amp;&amp; (Tv_1&lt;=(ustT_1_h-G_1))  ) { Evverh_1=0;}

if (Lsumft_1&lt;=(ustP_1_l-GP_1)) {Evizm_1=-3;}
if (Lsumft_1&gt;=(ustP_1_h+GP_1)) {Evizm_1=3; }
if ( (Lsumft_1&gt;=(ustP_1_l+G_1)) &amp;&amp; (Lsumft_1&lt;=(ustP_1_h-G_1))  ) { Evizm_1=0;}}

else{Evniz_1=0;Evser_1=0; Evverh_1=0;Evizm_1=0;}




//tank#2
//Объем мазута без м.о.
VftL_2=VsumftL_2-Vmo_2;

//из объмов определяем массы влажного мазута
Mft_2=VftL_2*Roft_2; //масса без м.о.
Mmoft_2=Vmo_2*Roft_2; //масса м.о.
Msumft_2=Mft_2+Mmoft_2; //суммарная масса мазута

//-136 = 0 - 136

//определяем массы сухого мазута
MSft_2=Mft_2*(1-W_2/100); //масса сухого мазута без м.о.
MSmoft_2=Mmoft_2*(1-W_2/100); //масса сухого м.о.
MSsumft_2=MSft_2+MSmoft_2; //суммарная масса сухого мазта


//my style
Screen2.Label_R0_2.Text="Ro0="+Ro0_2.ToString() + " г/см3";
Screen2.Label_W_2.Text="W="+W_2.ToString() + " %";
Screen2.Label_Tnv.Text="Тнар.="+ (System.Math.Round((double)(Tnv_2),1)).ToString() + " С";


if (SZI_2){
//блинк предупр. по Т и Р на HMI
if (Tn_2&lt;=(ustT_2_l-G_2)) {Evniz_2=-3;}
if (Tn_2&gt;=(ustT_2_h+G_2)) {Evniz_2=3;}
if ( (Tn_2&gt;=(ustT_2_l+G_2)) &amp;&amp; (Tn_2&lt;=(ustT_2_h-G_2))  ) { Evniz_2=0;}


if (Ts_2&lt;=(ustT_2_l-G_2)) {Evser_2=-3;}
if (Ts_2&gt;=(ustT_2_h+G_2)) {Evser_2=3; }
if ( (Ts_2&gt;=(ustT_2_l+G_2)) &amp;&amp; (Ts_2&lt;=(ustT_2_h-G_2))  ) { Evser_2=0;}

if (Tv_2&lt;=(ustT_2_l-G_2)) {Evverh_2=-3;}
if (Tv_2&gt;=(ustT_2_h+G_2)) {Evverh_2=3; }
if ( (Tv_2&gt;=(ustT_2_l+G_2)) &amp;&amp; (Tv_2&lt;=(ustT_2_h-G_2))  ) { Evverh_2=0;}

if (Lsumft_2&lt;=(ustP_2_l-GP_2)) {Evizm_2=-3;}
if (Lsumft_2&gt;=(ustP_2_h+GP_2)) {Evizm_2=3; }
if ( (Lsumft_2&gt;=(ustP_2_l+G_2)) &amp;&amp; (Lsumft_2&lt;=(ustP_2_h-G_2))  ) { Evizm_2=0;}}

else{Evniz_2=0;Evser_2=0; Evverh_2=0;Evizm_2=0;}


//Сигнализация на модуль RO8 
//tank#1
if (SZI_1){
if (Tsr_1&lt;=(ustT_1_l-G_1)) {RO_ch_05=1;}
if (Tsr_1&gt;=(ustT_1_h+G_1)) {RO_ch_05=1;}
if ( (Tsr_1&gt;=(ustT_1_l+G_1)) &amp;&amp; (Tn_1&lt;=(ustT_1_h-G_1))  ) { RO_ch_05=0;}

if (Lsumft_1&lt;=(ustP_1_l-GP_1)) {RO_ch_03=1;RO_ch_01=0;}
if (Lsumft_1&gt;=(ustP_1_h+GP_1)) {RO_ch_01=1;RO_ch_03=0;}
if ( (Lsumft_1&gt;=(ustP_1_l+G_1)) &amp;&amp; (Lsumft_1&lt;=(ustP_1_h-G_1))  ) { RO_ch_03=0;RO_ch_01=0;}}
else {RO_ch_05=0;RO_ch_03=0;RO_ch_01=0;}

//tank#1
if (SZI_2){
if (Tsr_2&lt;=(ustT_2_l-G_2)) {RO_ch_06=1;}
if (Tsr_2&gt;=(ustT_2_h+G_2)) {RO_ch_06=1;}
if ( (Tsr_2&gt;=(ustT_2_l+G_2)) &amp;&amp; (Tn_2&lt;=(ustT_2_h-G_2))  ) { RO_ch_06=0;}

if (Lsumft_2&lt;=(ustP_2_l-GP_2)) {RO_ch_04=1;RO_ch_02=0;}
if (Lsumft_2&gt;=(ustP_2_h+GP_2)) {RO_ch_02=1;RO_ch_04=0;}
if ( (Lsumft_2&gt;=(ustP_2_l+G_2)) &amp;&amp; (Lsumft_2&lt;=(ustP_2_h-G_2))  ) { RO_ch_04=0;RO_ch_02=0;}}
else {RO_ch_06=0;RO_ch_04=0;RO_ch_02=0;}

RO_ch_07=( (RO_ch_01) || (RO_ch_02) || (RO_ch_03) || (RO_ch_04) || (RO_ch_05) || (RO_ch_06));





//Msumft_2=Mft_2-Mmoft_2;
//-135=136- 135

ModbusSlave_Block1_0=P_1;
ModbusSlave_Block1_1=Hmo_1;        //100; //типо в метрах
ModbusSlave_Block1_2=Vmo_1;
ModbusSlave_Block1_3=Ro0_1;
ModbusSlave_Block1_4=W_1;
ModbusSlave_Block1_5=Tn_1;
ModbusSlave_Block1_6=Ts_1;
ModbusSlave_Block1_7=Tv_1;

ModbusSlave_Block1_8=Tnv_1;
ModbusSlave_Block1_9=Roft_1;
ModbusSlave_Block1_10=Lft_1;            //100; //типо в метрах
ModbusSlave_Block1_11=Lsumft_1;     //100; //типо в метрах
ModbusSlave_Block1_12=dL_1;            //100; //типо в метрах
ModbusSlave_Block1_13=Mft_1;
ModbusSlave_Block1_14=Mmoft_1;
ModbusSlave_Block1_15=Msumft_1;

ModbusSlave_Block1_16=MSft_1;
ModbusSlave_Block1_17=MSmoft_1;
ModbusSlave_Block1_18=MSsumft_1;
ModbusSlave_Block1_19=VsumftL_1;
ModbusSlave_Block1_20=VftL_1;



ModbusSlave_Block1_21=P_2;
ModbusSlave_Block1_22=Hmo_2;          //100; //типо в метрах
ModbusSlave_Block1_23=Vmo_2;
ModbusSlave_Block1_24=Ro0_2;
ModbusSlave_Block1_25=W_2;
ModbusSlave_Block1_26=Tn_2;
ModbusSlave_Block1_27=Ts_2;
ModbusSlave_Block1_28=Tv_2;

ModbusSlave_Block1_29=Tnv_2;
ModbusSlave_Block1_30=Roft_2;
ModbusSlave_Block1_31=Lft_2;            //100; //типо в метрах
ModbusSlave_Block1_32=Lsumft_2;      //100; //типо в метрах
ModbusSlave_Block1_33=dL_2;            //100; //типо в метрах
ModbusSlave_Block1_34=Mft_2;
ModbusSlave_Block1_35=Mmoft_2;
ModbusSlave_Block1_36=Msumft_2;

ModbusSlave_Block1_37=MSft_2;
ModbusSlave_Block1_38=MSmoft_2;
ModbusSlave_Block1_39=MSsumft_2;
ModbusSlave_Block1_40=VsumftL_2;
ModbusSlave_Block1_41=VftL_2;

ModbusSlave_Block2_0=NewPort_RTD_1_IO_Diag_RTD_1;// биты аварии датчиков
ModbusSlave_Block2_1=NewPort_RTD_2_IO_Diag_RTD_2;// биты аварии датчиков
ModbusSlave_Block2_2=NewPort_AI_1_IO_Diag_AI_1;// биты аварии датчиков

ModbusSlave_Block3_0=RO_ch_01;
ModbusSlave_Block3_1=RO_ch_02;
ModbusSlave_Block3_2=RO_ch_03;
ModbusSlave_Block3_3=RO_ch_04;
ModbusSlave_Block3_4=RO_ch_05;
ModbusSlave_Block3_5=RO_ch_06;
ModbusSlave_Block3_6=RO_ch_07;
ModbusSlave_Block3_7=RO_ch_08;

////Расход мин
if ( Convert.ToInt32(DateTime.Now.Minute) !=  min ){
Rashod_m_1 = Mft_1 - Mft_s_m_1;
Mft_s_m_1 = Mft_1;

Rashod_m_2 = Mft_2 - Mft_s_m_2;
Mft_s_m_2= Mft_2;

min =  Convert.ToInt32(DateTime.Now.Minute);
}


////Расход час
if ( Convert.ToInt32(DateTime.Now.Hour) !=  hour ){
Rashod_h_1 = Mft_1 - Mft_s_h_1;
Mft_s_h_1 = Mft_1;

Rashod_h_2 = Mft_2 - Mft_s_h_2;
Mft_s_h_2 = Mft_2;
hour =  Convert.ToInt32(DateTime.Now.Hour);
}

////Расход сут
if ( Convert.ToInt32(DateTime.Now.Day) !=  day ){
Rashod_d_1 = Mft_1 - Mft_s_d_1;
Mft_s_d_1 = Mft_1;

Rashod_d_2 = Mft_2 - Mft_s_d_2;
Mft_s_d_2 = Mft_2;
day =  Convert.ToInt32(DateTime.Now.Day);
}

ModbusSlave_Block5_0 = Rashod_m_1 ;
ModbusSlave_Block5_1 = Rashod_h_1 ;
ModbusSlave_Block5_2 = Rashod_d_1 ;
ModbusSlave_Block5_3 = Rashod_m_2 ;
ModbusSlave_Block5_4 = Rashod_h_2 ;
ModbusSlave_Block5_5 = Rashod_d_2 ;

ModbusSlave_Block6_0 = err_bad_st_1 ;
ModbusSlave_Block6_1 = err_bad_row_1 ;
ModbusSlave_Block6_2 = err_bad_st_2 ;
ModbusSlave_Block6_3 = err_bad_row_2 ;

</Expression>
  </Function>
  <Function>
    <Name>Function2</Name>
    <Expression>///отдал бллллююааа
double dt = Convert.ToDouble(DateTime.Now.ToOADate());
ModbusSlave_Block4_0=dt - (Int32)(dt);  


NewPort_RO_ch_01=RO_ch_01;
NewPort_RO_ch_02=RO_ch_02;
NewPort_RO_ch_03=RO_ch_03;
NewPort_RO_ch_04=RO_ch_04;
NewPort_RO_ch_05=RO_ch_05;
NewPort_RO_ch_06=RO_ch_06;
NewPort_RO_ch_07=RO_ch_07;
NewPort_RO_ch_08=RO_ch_08;



if (copy_from_usb)
{
     if (System.IO.Directory.Exists("\\Hard Disk\\"))  {
                           System.IO.File.Copy(System.IO.Path.Combine(path_usb, "table.csv"), System.IO.Path.Combine(path,  "table.csv"),true);
                           System.IO.File.Copy(System.IO.Path.Combine(path_usb, "level3.csv"), System.IO.Path.Combine(path, "level3.csv"),true);
                           System.IO.File.Copy(System.IO.Path.Combine(path_usb, "level4.csv"), System.IO.Path.Combine(path, "level4.csv"),true);
                                                                                 } 

copy_from_usb=0;
}
</Expression>
  </Function>
  <SystemTag>
    <Name>CurrentPage</Name>
    <Type>Analog</Type>
    <Comment>Current Page</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>CurrentUser</Name>
    <Type>String</Type>
    <Comment>Current User</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>CurrentSecurityLevel</Name>
    <Type>Analog</Type>
    <Comment>Current Security Level</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>TriggerPer100ms</Name>
    <Type>Digital</Type>
    <Comment>Trigger Per 100 milli second</Comment>
    <Scan>0</Scan>
    <ScanRate>100</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>TriggerPer1sec</Name>
    <Type>Digital</Type>
    <Comment>Trigger Per 1 second</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>MemoryFull</Name>
    <Type>Digital</Type>
    <Comment>Memory Full</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>MemoryAvailablePresent</Name>
    <Type>Analog</Type>
    <Comment>Memory Available Present</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>NumberofRealtimeAlarm</Name>
    <Type>Analog</Type>
    <Comment>Number of Realtime Alarm</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>NumberofHistoricalAlarm</Name>
    <Type>Analog</Type>
    <Comment>Number of Historical Alarm</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>ScreenSaverTime</Name>
    <Type>Analog</Type>
    <Comment>Unit: Minute, 0: Disable</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>BeeperEnable</Name>
    <Type>Digital</Type>
    <Comment>Beeper Enable</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>BeepVolume</Name>
    <Type>Analog</Type>
    <Comment>0~100</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>Backlight</Name>
    <Type>Analog</Type>
    <Comment>0~100</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>RTC_Day</Name>
    <Type>Analog</Type>
    <Comment>RTC Day</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>RTC_Month</Name>
    <Type>Analog</Type>
    <Comment>RTC Month</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>RTC_Year</Name>
    <Type>Analog</Type>
    <Comment>RTC Year</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>RTC_Hour</Name>
    <Type>Analog</Type>
    <Comment>RTC Hour</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>RTC_Min</Name>
    <Type>Analog</Type>
    <Comment>RTC Min</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>RTC_Sec</Name>
    <Type>Analog</Type>
    <Comment>RTC Sec</Comment>
    <Scan>0</Scan>
    <ScanRate>100</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>RTC_DayofWeek</Name>
    <Type>Analog</Type>
    <Comment>RTC Dayof Week</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>IsDataLoging</Name>
    <Type>Digital</Type>
    <Comment>Start or Stop Datalog </Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>SystemDI_1</Name>
    <Type>Digital</Type>
    <Comment>Option</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>SystemDI_2</Name>
    <Type>Digital</Type>
    <Comment>Option</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>SystemDI_3</Name>
    <Type>Digital</Type>
    <Comment>Option</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>1</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>SystemDO_1</Name>
    <Type>Digital</Type>
    <Comment>Option</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>SystemDO_2</Name>
    <Type>Digital</Type>
    <Comment>Option</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>SystemDO_3</Name>
    <Type>Digital</Type>
    <Comment>Option</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>LanguageIndex</Name>
    <Type>Analog</Type>
    <Comment>Language Index</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>InputTag</Name>
    <Type>String</Type>
    <Comment>For input data function</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>1</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>CurrentRecipeName</Name>
    <Type>String</Type>
    <Comment>Current recipe name</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
  <SystemTag>
    <Name>CurrentRecipeDataRecord</Name>
    <Type>String</Type>
    <Comment>Current recipe data record</Comment>
    <Scan>0</Scan>
    <ScanRate>1000</ScanRate>
    <ReadOnly>0</ReadOnly>
    <DisplayStartIdx>0</DisplayStartIdx>
    <DisplayCount>0</DisplayCount>
    <VisibleStartIdx>0</VisibleStartIdx>
    <VisibleCount>0</VisibleCount>
    <RunModeType>0</RunModeType>
  </SystemTag>
</HMIDataSet>